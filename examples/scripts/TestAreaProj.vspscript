void main()
{
    string fid = AddGeom( "POD", "" );

    Update();

    int nanalysis = GetNumAnalysis();

    Print( "Number of registered analyses: " + nanalysis );
    Print( "" );

    array< string > @analysis_array = ListAnalysis();

    for ( int i = 0; i < int( analysis_array.size() ); i++ )
    {
        PrintAnalysisInputs( analysis_array[i] );
        Print( "" );
    }

    // Projected Areas
    array<int> dirtype = GetIntAnalysisInput( "Projection", "DirectionType" );
    dirtype[0] = X_PROJ;
    SetIntAnalysisInput( "Projection", "DirectionType", dirtype );

    string rid = ExecAnalysis( "Projection" );
    PrintResults( rid );
    WriteResultsCSVFile( rid, "XProj.csv" );
    DeleteGeomVec( GetStringResults( rid, "Mesh_GeomID" ) );

    dirtype[0] = Y_PROJ;
    SetIntAnalysisInput( "Projection", "DirectionType", dirtype );

    rid = ExecAnalysis( "Projection" );
    PrintResults( rid );
    WriteResultsCSVFile( rid, "YProj.csv" );
    DeleteGeomVec( GetStringResults( rid, "Mesh_GeomID" ) );

    dirtype[0] = Z_PROJ;
    SetIntAnalysisInput( "Projection", "DirectionType", dirtype );

    rid = ExecAnalysis( "Projection" );
    PrintResults( rid );
    WriteResultsCSVFile( rid, "ZProj.csv" );
    DeleteGeomVec( GetStringResults( rid, "Mesh_GeomID" ) );


    //==== Check For API Errors ====//
    while ( GetNumTotalErrors() > 0 )
    {
        ErrorObj err = PopLastError();
        Print( err.GetErrorString() );
    }

}
