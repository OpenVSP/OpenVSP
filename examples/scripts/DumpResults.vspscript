void PrintResults( string results )
{
    Print( "Results ID: " + results );

    array < string > @ res_array = GetAllDataNames( results );

    for ( int j = 0; j < int( res_array.size() ); j++ )
    {
        Print( res_array[j], false );

        int typ = GetResultsType( results, res_array[j] );
        int ndat = GetNumData( results, res_array[j] );

        if ( typ == INT_DATA )
        {
            for ( int indx = 0; indx < ndat; indx++ )
            {
                array<int>@ dat = GetIntResults( results, res_array[j], indx );

                for ( int m = 0; m < int( dat.size() ); m++ )
                {
                    Print( dat[m], false );
                Print( "" );
                }
            }
        }
        else if ( typ == DOUBLE_DATA )
        {
            for ( int indx = 0; indx < ndat; indx++ )
            {
                array<double>@ dat = GetDoubleResults( results, res_array[j], indx );

                for ( int m = 0; m < int( dat.size() ); m++ )
                {
                    Print( dat[m], false );
                }
                Print( "" );
            }
        }
        else if ( typ == STRING_DATA )
        {
            for ( int indx = 0; indx < ndat; indx++ )
            {
                array<string>@ dat = GetStringResults( results, res_array[j], indx );

                for ( int m = 0; m < int( dat.size() ); m++ )
                {
                    Print( dat[m], false );
                }
                Print( "" );
            }
        }
        else if ( typ == VEC3D_DATA )
        {
            for ( int indx = 0; indx < ndat; indx++ )
            {
                array<vec3d>@ dat = GetVec3dResults( results, res_array[j], indx );

                for ( int m = 0; m < int( dat.size() ); m++ )
                {
                    Print( dat[m], false );
                }
                Print( "" );
            }
        }
        else
        {
            Print( "Unrecognized type." );
        }
    }
    Print("");
}


void main()
{
    array< string > @results_array = GetAllResultsNames();

    for ( int i = 0; i < int( results_array.size() ); i++ )
    {
        Print( results_array[i] );
        string resid = FindLatestResultsID( results_array[i] );
        PrintResults( resid );
        Print( "" );
    }


    //==== Check For API Errors ====//
    while ( GetNumTotalErrors() > 0 )
    {
        ErrorObj err = PopLastError();
        Print( err.GetErrorString() );
    }

}
